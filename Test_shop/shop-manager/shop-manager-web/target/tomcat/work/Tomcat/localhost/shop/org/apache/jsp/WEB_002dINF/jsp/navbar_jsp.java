/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-04-17 08:13:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class navbar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("  <title>Navbar组件</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugins/layui/css/layui.css\" media=\"all\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/build/css/doc.css\" media=\"all\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"kit-doc\">\r\n");
      out.write("  <blockquote class=\"layui-elem-quote\">Navbar组件是基于<a href=\"http://www.layui.com/doc/element/nav.html\" target=\"_blank\">layui导航菜单</a> 封装的组件，配合\r\n");
      out.write("    <a href=\"tab.html\">tab组件</a>能完成多开页面的操作</blockquote>\r\n");
      out.write("  <div class=\"kit-doc-title\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("      <legend><a name=\"blockquote\">设置绑定方式</a></legend>\r\n");
      out.write("    </fieldset>\r\n");
      out.write("  </div>\r\n");
      out.write("  <p>提供两种设置方式(设置data属性 和 kit-target 属性),以下两种方式都能正确解析[详细请参考index.html]</p>\r\n");
      out.write("  <table class=\"layui-table\">\r\n");
      out.write("    <colgroup>\r\n");
      out.write("      <col width=\"100\">\r\n");
      out.write("      <col>\r\n");
      out.write("    </colgroup>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>方式一</td>\r\n");
      out.write("      <td>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("//data-url //跳转地址\r\n");
      out.write("//data-icon //图标，支持layui图片和fa图标\r\n");
      out.write("//data-title //标题\r\n");
      out.write("//data-id //唯一id\r\n");
      out.write("Example:\r\n");
      out.write("<pre class=\"layui-code\">\r\n");
      out.write("data-url=\"form.html\" data-icon=\"fa-user\" data-title=\"表单\" kit-target data-id='2' kit-target</pre></pre>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>方式二</td>\r\n");
      out.write("      <td>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("kit-target data-options=\"{url:'test.html',icon:'fa-user',title:'表格',id:'1'}\"</pre>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("  <div class=\"kit-doc-title\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("      <legend><a name=\"blockquote\">渲染方式</a></legend>\r\n");
      out.write("    </fieldset>\r\n");
      out.write("  </div>\r\n");
      out.write("  <p> 该组件提供了三种渲染方式 </p>\r\n");
      out.write("  <table class=\"layui-table\">\r\n");
      out.write("    <colgroup>\r\n");
      out.write("      <col width=\"180\">\r\n");
      out.write("      <col width=\"230\">\r\n");
      out.write("      <col width=\"100\">\r\n");
      out.write("      <col>\r\n");
      out.write("    </colgroup>\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th>渲染方式</th>\r\n");
      out.write("      <th>方法</th>\r\n");
      out.write("      <th>备注</th>\r\n");
      out.write("      <th>详细说明</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>服务端渲染后绑定</td>\r\n");
      out.write("      <td>调用navbar.bind()方法</td>\r\n");
      out.write("      <td>已实现</td>\r\n");
      out.write("      <td>此方法需在dom元素渲染完成后执行\r\n");
      out.write("        <p>Example:</p>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("//注：需在容器内添加属性 kit-navbar或指定容器,example:navbar.set({elem:'#container'});\r\n");
      out.write("navbar.bind(function(data) {\r\n");
      out.write("    t.tabAdd(data);//这个方法为tab组件提供的方法\r\n");
      out.write("});\r\n");
      out.write("data的数据结构:\r\n");
      out.write("data.icon;//图标，支持layui图标和fontawesome图标\r\n");
      out.write("data.id;//id,唯一标识\r\n");
      out.write("data.title;//标题\r\n");
      out.write("data.url;//跳转地址</pre>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>异步渲染方式(AJAX)</td>\r\n");
      out.write("      <td>通过设置url参数组件内部渲染</td>\r\n");
      out.write("      <td>已实现</td>\r\n");
      out.write("      <td>设置remote参数，调用render方法</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>本地数据渲染方式</td>\r\n");
      out.write("      <td>通过设置data参数组件内部渲染</td>\r\n");
      out.write("      <td>已实现</td>\r\n");
      out.write("      <td>设置data参数，调用render方法</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("  <div class=\"kit-doc-title\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("      <legend><a name=\"blockquote\">可用的方法</a></legend>\r\n");
      out.write("    </fieldset>\r\n");
      out.write("  </div>\r\n");
      out.write("  <table class=\"layui-table\">\r\n");
      out.write("    <colgroup>\r\n");
      out.write("      <col width=\"150\">\r\n");
      out.write("      <col width=\"200\">\r\n");
      out.write("      <col width=\"150\">\r\n");
      out.write("      <col>\r\n");
      out.write("    </colgroup>\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th>名称</th>\r\n");
      out.write("      <th>参数</th>\r\n");
      out.write("      <th>返回值</th>\r\n");
      out.write("      <th>描述</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>set(options)</td>\r\n");
      out.write("      <td><a href=\"#options\">options</a>/object</td>\r\n");
      out.write("      <td>this/object</td>\r\n");
      out.write("      <td>配置一些全局参数,返回当前navbar对象，以便于链式调用\r\n");
      out.write("        <p>Example:</p>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("navbar.set({\r\n");
      out.write("    elem:'#navbarContainer',\r\n");
      out.write("    url:''\r\n");
      out.write("});</pre>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>bind(callback)</td>\r\n");
      out.write("      <td>callback/function(data)</td>\r\n");
      out.write("      <td>void</td>\r\n");
      out.write("      <td>绑定a标签的点击事件\r\n");
      out.write("        <p>Example:</p>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("navbar.bind(function(data) {\r\n");
      out.write("    t.tabAdd(data);//这个方法为tab组件提供的方法\r\n");
      out.write("});</pre></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>render(callback)</td>\r\n");
      out.write("      <td>callback/function(data)</td>\r\n");
      out.write("      <td>void</td>\r\n");
      out.write("      <td>渲染navbar\r\n");
      out.write("        <p>Example:</p>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("    navbar.render(function(data) {\r\n");
      out.write("        t.tabAdd(data);//这个方法为tab组件提供的方法\r\n");
      out.write("    });</pre></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("  <div class=\"kit-doc-title\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("      <legend><a name=\"blockquote\" id=\"options\">options参数说明</a></legend>\r\n");
      out.write("    </fieldset>\r\n");
      out.write("  </div>\r\n");
      out.write("  <table class=\"layui-table\">\r\n");
      out.write("    <colgroup>\r\n");
      out.write("      <col width=\"150\">\r\n");
      out.write("      <col width=\"150\">\r\n");
      out.write("      <col width=\"150\">\r\n");
      out.write("      <col>\r\n");
      out.write("    </colgroup>\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th>名称</th>\r\n");
      out.write("      <th>类型</th>\r\n");
      out.write("      <td>默认值</td>\r\n");
      out.write("      <th>描述</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>elem</td>\r\n");
      out.write("      <td>string</td>\r\n");
      out.write("      <td>undefined</td>\r\n");
      out.write("      <td>容器DOM，支持id选择器和类选择器<br/>(如果elem为undefined就必须在容器标签添加kit-navbar属性，否则会抛异常)</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>filter</td>\r\n");
      out.write("      <td>string</td>\r\n");
      out.write("      <td>kitNavbar</td>\r\n");
      out.write("      <td>过滤器名称</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>data</td>\r\n");
      out.write("      <td>object</td>\r\n");
      out.write("      <td>undefined</td>\r\n");
      out.write("      <td>本地数据源，有特定的数据结构，<a href=\"#data\">点击我查看</a></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>remote</td>\r\n");
      out.write("      <td>object</td>\r\n");
      out.write("      <td> 详细看描述 url:undefined,type:'GET',jsonp:false</td>\r\n");
      out.write("      <td>\r\n");
      out.write("                        <pre class=\"layui-code\">\r\n");
      out.write("navbar.set{\r\n");
      out.write("    remote:{\r\n");
      out.write("        url: 'xx/api', //接口地址\r\n");
      out.write("        type: 'POSST', //请求方式\r\n");
      out.write("        jsonp: false //跨域\r\n");
      out.write("    }\r\n");
      out.write("}</pre>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("  <div class=\"kit-doc-title\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("      <legend><a name=\"blockquote\" id=\"data\">Data数据结构(注：当前只支持两级菜单)</a></legend>\r\n");
      out.write("    </fieldset>\r\n");
      out.write("  </div>\r\n");
      out.write("  <blockquote class=\"layui-elem-quote\">\r\n");
      out.write("            <pre class=\"layui-code\">\r\n");
      out.write("//图标支持<a href=\"http://www.layui.com/doc/element/icon.html\" target=\"_blank\">layui图标</a>和<a href=\"http://www.fontawesome.com.cn/faicons/\" target=\"_blank\">fontawesome字体图标</a>\r\n");
      out.write("[{\r\n");
      out.write("    \"id\": \"1\",\r\n");
      out.write("    \"title\": \"基本元素\",\r\n");
      out.write("    \"icon\": \"fa-cubes\",\r\n");
      out.write("    \"spread\": true, //如果为true则展开 (v1.0.3可用)\r\n");
      out.write("    \"children\": [{\r\n");
      out.write("        \"id\": \"7\",\r\n");
      out.write("        \"title\": \"表格\",\r\n");
      out.write("        \"icon\": \"&#xe6c6;\",\r\n");
      out.write("        \"url\": \"test.jsp\"\r\n");
      out.write("    }, {\r\n");
      out.write("        \"id\": \"8\",\r\n");
      out.write("        \"title\": \"表单\",\r\n");
      out.write("        \"icon\": \"&#xe63c;\",\r\n");
      out.write("        \"url\": \"form.jsp\"\r\n");
      out.write("    }]\r\n");
      out.write("}, {\r\n");
      out.write("    \"id\": \"5\",\r\n");
      out.write("    \"title\": \"这是一级导航\",\r\n");
      out.write("    \"icon\": \"fa-stop-circle\",\r\n");
      out.write("    \"url\": \"https://www.baidu.com\",\r\n");
      out.write("    \"spread\": false\r\n");
      out.write("}]</pre>\r\n");
      out.write("  </blockquote>\r\n");
      out.write("  <blockquote class=\"layui-elem-quote\">这个文档就先写到这里吧，后面新增了再补充啦。</blockquote>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugins/layui/layui.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
